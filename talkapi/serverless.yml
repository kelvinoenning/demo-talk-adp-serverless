service: awsadapcontalk

package:
  exclude:
    - OLD/**
    - .idea/**
    - .vscode-root/Cache/data_0
    - .vscode/**
    - node_modules/aws-sdk/**
    - node_modules/base64-js/**
    - node_modules/buffer/**
    - node_modules/lodash/**
    - node_modules/crypto-browserify/**
    - node_modules/ieee754/**
    - node_modules/isarray/**
    - node_modules/jmespath/**
    - node_modules/punycode/**
    - node_modules/querystring/**
    - node_modules/sax/**
    - node_modules/url/**
    - node_modules/uiid/**
    - node_modules/xml2js/**
    - node_modules/xmlbuilder/**

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 128 #Informamos que todas as funcoes vao utilizar no maximo 128mb de ram!

functions:
  healthCheck:
    handler: fn/health.check
    events: # Adicionamos o objeto de eventos para a função.
      - http: # Na lista de eventos adicionamos o evento HTTP.
          method: get # O evento HTTP pode ser chamado com um GET.
          path: /health # Atende ao path .../health
          cors: true # Liberação CORS

  newUser:
    handler: fn/user/new.run
    events:
      - http:
          method: post
          path: /users
          cors: true
  
  # Existe um {email} no path!
  # Isto informa que iremos passar um parametro dinamico na URL chamda pelo Postman.
  getUser:
    handler: fn/user/get.run
    events:
      - http:
          method: get
          path: /users/{email}
          cors: true
  
  listUser:
    handler: fn/user/list.run
    events:
      - http:
          method: get
          path: /users
          cors: true

  # Existe um {email} no path!
  # Isto informa que iremos passar um parametro dinamico na URL chamda pelo Postman.
  updateUser:
    handler: fn/user/update.run
    events:
      - http:
          method: put
          path: /users/{email}
          cors: true

  # Existe um {email} no path!
  # Isto informa que iremos passar um parametro dinamico na URL chamda pelo Postman.
  deleteUser:
    handler: fn/user/delete.run
    events:
      - http:
          method: delete
          path: /users/{email}
          cors: true

# Configuracao da tabela que vamos usar na API
resources:
  Resources:
    userTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: Users
        AttributeDefinitions:
          -
            AttributeName: email
            AttributeType: S
        KeySchema:
          -
            AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1